// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/houses/houses.go

// Package houses is a generated GoMock package.
package houses

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/mirhijinam/backend-bootcamp-assignment-2024/internal/models"
	dto "github.com/mirhijinam/backend-bootcamp-assignment-2024/internal/models/dto"
)

// MockhouseRepo is a mock of houseRepo interface.
type MockhouseRepo struct {
	ctrl     *gomock.Controller
	recorder *MockhouseRepoMockRecorder
}

// MockhouseRepoMockRecorder is the mock recorder for MockhouseRepo.
type MockhouseRepoMockRecorder struct {
	mock *MockhouseRepo
}

// NewMockhouseRepo creates a new mock instance.
func NewMockhouseRepo(ctrl *gomock.Controller) *MockhouseRepo {
	mock := &MockhouseRepo{ctrl: ctrl}
	mock.recorder = &MockhouseRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockhouseRepo) EXPECT() *MockhouseRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockhouseRepo) Create(ctx context.Context, house dto.NewHouse) (models.House, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, house)
	ret0, _ := ret[0].(models.House)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockhouseRepoMockRecorder) Create(ctx, house interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockhouseRepo)(nil).Create), ctx, house)
}

// GetFlatsByHouseId mocks base method.
func (m *MockhouseRepo) GetFlatsByHouseId(ctx context.Context, houseId int, role models.Role) ([]models.Flat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFlatsByHouseId", ctx, houseId, role)
	ret0, _ := ret[0].([]models.Flat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFlatsByHouseId indicates an expected call of GetFlatsByHouseId.
func (mr *MockhouseRepoMockRecorder) GetFlatsByHouseId(ctx, houseId, role interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlatsByHouseId", reflect.TypeOf((*MockhouseRepo)(nil).GetFlatsByHouseId), ctx, houseId, role)
}
